{"version":3,"sources":["../static/js/31.55b81de7.chunk.js","docs/en/class.md"],"names":["webpackJsonp","39","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/31.55b81de7.chunk.js","sourcesContent":["webpackJsonp([31],{\n\n/***/ 39:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Class\\n\\nOmi has two built-in class methods `extractClass` and `classNames`.\\n\\n```js\\nimport { classNames, extractClass } from 'omi'\\n\\ndefine('my-element', class extends WeElement {\\n  render(props) {\\n    //extractClass will take out this class/className from props and merge the other classNames to obj\\n    const cls = extractClass(props, 'o-my-class', {\\n      'other-class': true,\\n      'other-class-b': this.xxx === 1\\n    })\\n\\n    return (\\n      <div {...cls} {...props}>\\n        Test\\n      </div>\\n    )\\n  }\\n})\\n  \\n```\\n\\nThe `classNames` is the same as [classnames](https://github.com/JedWatson/classnames) of [npm](https://www.npmjs.com/package/classnames).\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/31.55b81de7.chunk.js","module.exports = \"## Class\\n\\nOmi has two built-in class methods `extractClass` and `classNames`.\\n\\n```js\\nimport { classNames, extractClass } from 'omi'\\n\\ndefine('my-element', class extends WeElement {\\n  render(props) {\\n    //extractClass will take out this class/className from props and merge the other classNames to obj\\n    const cls = extractClass(props, 'o-my-class', {\\n      'other-class': true,\\n      'other-class-b': this.xxx === 1\\n    })\\n\\n    return (\\n      <div {...cls} {...props}>\\n        Test\\n      </div>\\n    )\\n  }\\n})\\n  \\n```\\n\\nThe `classNames` is the same as [classnames](https://github.com/JedWatson/classnames) of [npm](https://www.npmjs.com/package/classnames).\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/en/class.md\n// module id = 39\n// module chunks = 31"],"sourceRoot":""}