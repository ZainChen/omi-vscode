{"version":3,"sources":["../static/js/14.4ee71391.chunk.js","docs/zh-cn/event.md"],"names":["webpackJsonp","56","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/14.4ee71391.chunk.js","sourcesContent":["webpackJsonp([14],{\n\n/***/ 56:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Event\\n\\n```jsx\\ndefine('my-element', class extends WeElement {\\n  onClick = (evt) => {\\n    alert('Hello Omi!')\\n  }\\n\\n  render() {\\n    return (\\n      <h1 onClick={this.onClick}>Hello, world!</h1>\\n    )\\n  }\\n})\\n```\\n\\n### Custom Event\\n\\n```jsx\\ndefine('my-element', class extends WeElement {\\n  onClick = (evt) => {\\n    this.fire('myevent', { name: 'abc' })\\n  }\\n\\n  render(props) {\\n    return (\\n      <h1 onClick={this.onClick}>Hello, world!</h1>\\n    )\\n  }\\n})\\n```\\n\\n然后在你的自定义元素上绑定事件：\\n\\n```jsx\\n<my-element onMyEvent={(evt) => { alert(evt.detail.name) }}></my-element>\\n```\\n\\n通过 `this.fire` 触发自定义事件，fire 第一个参数是事件名称，第二个参数是传递的数据。通过 `evt.detail` 可以获取到传递的数据。\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/14.4ee71391.chunk.js","module.exports = \"## Event\\n\\n```jsx\\ndefine('my-element', class extends WeElement {\\n  onClick = (evt) => {\\n    alert('Hello Omi!')\\n  }\\n\\n  render() {\\n    return (\\n      <h1 onClick={this.onClick}>Hello, world!</h1>\\n    )\\n  }\\n})\\n```\\n\\n### Custom Event\\n\\n```jsx\\ndefine('my-element', class extends WeElement {\\n  onClick = (evt) => {\\n    this.fire('myevent', { name: 'abc' })\\n  }\\n\\n  render(props) {\\n    return (\\n      <h1 onClick={this.onClick}>Hello, world!</h1>\\n    )\\n  }\\n})\\n```\\n\\n然后在你的自定义元素上绑定事件：\\n\\n```jsx\\n<my-element onMyEvent={(evt) => { alert(evt.detail.name) }}></my-element>\\n```\\n\\n通过 `this.fire` 触发自定义事件，fire 第一个参数是事件名称，第二个参数是传递的数据。通过 `evt.detail` 可以获取到传递的数据。\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/event.md\n// module id = 56\n// module chunks = 14"],"sourceRoot":""}