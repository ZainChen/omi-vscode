{"version":3,"sources":["../static/js/0.9d48c206.chunk.js","docs/zh-cn/update.md"],"names":["webpackJsonp","70","module","exports"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/0.9d48c206.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 70:\n/***/ (function(module, exports) {\n\nmodule.exports = \"\\n## Update\\n\\n`update` 方法是内置的重要核心方法，用于更新组件自身。比如:\\n\\n```js\\nthis.update()\\n```\\n\\n也可以传递参数，决定是否在 html 模式下忽略 attributes，强行更新:\\n\\n```js\\nthis.update(true)\\n```\\n\\n举个场景，比如点击弹出层的 mask 关闭弹出，在 react 中需要传递给父组件，让父组件更新，而 Omi 推崇自更新，这样 diff 的区域更小。\\n\\n```js\\nonMaskClick = ()=> {\\n  //修改 props\\n  this.props.show = false\\n  //防止父组件更新 diff 不出结果\\n  this.prevProps.show = false\\n  //更新，并且在 html 模式下忽略 attributes\\n  this.update(true)\\n  //触发事件，可以通过这个更改外部的状态变量来保持一致性，但是外面的组件不用再更新\\n  this.fire('close')\\n}\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.9d48c206.chunk.js","module.exports = \"\\n## Update\\n\\n`update` 方法是内置的重要核心方法，用于更新组件自身。比如:\\n\\n```js\\nthis.update()\\n```\\n\\n也可以传递参数，决定是否在 html 模式下忽略 attributes，强行更新:\\n\\n```js\\nthis.update(true)\\n```\\n\\n举个场景，比如点击弹出层的 mask 关闭弹出，在 react 中需要传递给父组件，让父组件更新，而 Omi 推崇自更新，这样 diff 的区域更小。\\n\\n```js\\nonMaskClick = ()=> {\\n  //修改 props\\n  this.props.show = false\\n  //防止父组件更新 diff 不出结果\\n  this.prevProps.show = false\\n  //更新，并且在 html 模式下忽略 attributes\\n  this.update(true)\\n  //触发事件，可以通过这个更改外部的状态变量来保持一致性，但是外面的组件不用再更新\\n  this.fire('close')\\n}\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/update.md\n// module id = 70\n// module chunks = 0"],"sourceRoot":""}