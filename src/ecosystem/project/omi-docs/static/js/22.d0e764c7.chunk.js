webpackJsonp([22],{46:function(n,e){n.exports="## Omiu \n\nOmiu is the official UI component library of Omi, based on Omio(IE8+) and compatible with Omi, using the design style of Wechat 7.0.\n\n[\u2192 Omiu Docs && REPL](https://tencent.github.io/omi/packages/omiu/examples/build/index.html)\n\n## Colors\n\n|  **Color**  | **Meaning**  |\n| ------------- |:-------------:|\n| #07C160  | Noble Vigorous Green | \n| #171717  | Steady Elegant Black |   \n| #FEFEFE  | Transcendent White |   \n| #F95050  | Temperament Eye-catching Red |   \n| #ECECEC  | Lost Indifferent Gray |   \n\n\n## Use it immediately\n\n```\nnpm i omi-cli -g             \nomi init my-app   \ncd my-app           \nnpm start                     \nnpm run build    \n```\n\n> `npx omi-cli init my-app` is also supported(npm v5.2.0+).\n\n## Use it in existing project\n\n```js\nnpm i omiu\n```\n\n```js\nimport { WeElement, define, render } from 'omi'\n//written by E6+,  you need to set JS under node modules to run normally after Babel or TS compilation\nimport 'omiu/button'\n//or import all, published by ES5\n//import 'omiu'\n\ndefine('my-app', class extends WeElement {\n  onClick = () => {\n    console.log('Hello omiu!');\n  }\n\n  render() {\n    return (\n      <o-button onClick={this.onClick}>I am button.</o-button>\n    )\n  }\n})\n\nrender(<my-app />, 'body')\n```\n\n"}});
//# sourceMappingURL=22.d0e764c7.chunk.js.map